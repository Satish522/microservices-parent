<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.satish.notificationservice.NotificationServiceApplicationTests" time="2.296" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services/target/test-classes:/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services/target/classes:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/kafka/spring-kafka/3.1.1/spring-kafka-3.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-messaging/6.1.3/spring-messaging-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/luben/zstd-jni/1.5.5-1/zstd-jni-1.5.5-1.jar:/Users/satishkumarsubudhi/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/xerial/snappy/snappy-java/1.1.10.5/snappy-java-1.1.10.5.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/kafka/spring-kafka-test/3.1.1/spring-kafka-test-3.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/zookeeper/zookeeper/3.8.3/zookeeper-3.8.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.8.3/zookeeper-jute-3.8.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-handler/4.1.105.Final/netty-handler-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-common/4.1.105.Final/netty-common-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-resolver/4.1.105.Final/netty-resolver-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-buffer/4.1.105.Final/netty-buffer-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport/4.1.105.Final/netty-transport-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.105.Final/netty-transport-native-unix-common-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-codec/4.1.105.Final/netty-codec-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport-native-epoll/4.1.105.Final/netty-transport-native-epoll-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.105.Final/netty-transport-classes-epoll-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1-test.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-metadata/3.6.1/kafka-metadata-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-raft/3.6.1/kafka-raft-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/pcollections/pcollections/4.0.1/pcollections-4.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1-test.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-streams-test-utils/3.6.1/kafka-streams-test-utils-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-streams/3.6.1/kafka-streams-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/rocksdb/rocksdbjni/7.9.2/rocksdbjni-7.9.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/scala-library/2.13.11/scala-library-2.13.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-group-coordinator/3.6.1/kafka-group-coordinator-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-storage-api/3.6.1/kafka-storage-api-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-tools-api/3.6.1/kafka-tools-api-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-storage/3.6.1/kafka-storage-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/ben-manes/caffeine/caffeine/3.1.8/caffeine-3.1.8.jar:/Users/satishkumarsubudhi/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/net/sourceforge/argparse4j/argparse4j/0.7.0/argparse4j-0.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-validator/commons-validator/1.7/commons-validator-1.7.jar:/Users/satishkumarsubudhi/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/Users/satishkumarsubudhi/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/Users/satishkumarsubudhi/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.13/2.15.3/jackson-module-scala_2.13-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.15.3/jackson-dataformat-csv-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/bitbucket/b_c/jose4j/0.9.3/jose4j-0.9.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/modules/scala-collection-compat_2.13/2.10.0/scala-collection-compat_2.13-2.10.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/modules/scala-java8-compat_2.13/1.0.2/scala-java8-compat_2.13-1.0.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/scala-reflect/2.13.11/scala-reflect-2.13.11.jar:/Users/satishkumarsubudhi/.m2/repository/com/typesafe/scala-logging/scala-logging_2.13/3.9.4/scala-logging_2.13-3.9.4.jar:/Users/satishkumarsubudhi/.m2/repository/io/dropwizard/metrics/metrics-core/4.2.23/metrics-core-4.2.23.jar:/Users/satishkumarsubudhi/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1-test.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.1/junit-platform-launcher-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.2/spring-boot-starter-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.2/spring-boot-actuator-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.2/spring-boot-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.2/micrometer-jakarta9-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-core/1.12.2/micrometer-core-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/satishkumarsubudhi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing-bridge-brave/1.2.2/micrometer-tracing-bridge-brave-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing/1.2.2/micrometer-tracing-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/context-propagation/1.1.0/context-propagation-1.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave/5.16.0/brave-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.16.0/brave-context-slf4j-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.16.0/brave-instrumentation-http-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/aws/brave-propagation-aws/0.23.5/brave-propagation-aws-0.23.5.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.16.3/zipkin-reporter-brave-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.16.3/zipkin-reporter-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/zipkin2/zipkin/2.23.2/zipkin-2.23.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.1.0/spring-cloud-starter-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.1.0/spring-cloud-starter-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.1.0/spring-cloud-context-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.1.0/spring-cloud-commons-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-rsa/1.1.1/spring-security-rsa-1.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.74/bcprov-jdk18on-1.74.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.1.0/spring-cloud-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.2.3/httpclient5-5.2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.2.4/httpcore5-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.2.4/httpcore5-h2-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-client/2.0.1/eureka-client-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/satishkumarsubudhi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.19/xstream-1.4.19.jar:/Users/satishkumarsubudhi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/satishkumarsubudhi/.m2/repository/commons-codec/commons-codec/1.16.0/commons-codec-1.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/satishkumarsubudhi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/jettison/jettison/1.4.0/jettison-1.4.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-core/2.0.1/eureka-core-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/woodstox/woodstox-core/6.2.1/woodstox-core-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.1.0/spring-cloud-starter-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.1.0/spring-cloud-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/reactor-core/3.6.2/reactor-core-3.6.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.1/reactor-extra-3.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.2/spring-boot-starter-cache-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context-support/6.1.3/spring-context-support-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="/Applications/SpringToolSuite4.app/Contents/Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.6.v20230204-1729/jre/lib"/>
    <property name="sun.java.command" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services/target/surefire/surefirebooter-20240218234615971_23.jar /Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services/target/surefire 2024-02-18T23-45-33_298-jvmRun1 surefire-20240218234615971_21tmp surefire_5-20240218234615971_22tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services/target/test-classes:/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services/target/classes:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/kafka/spring-kafka/3.1.1/spring-kafka-3.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-messaging/6.1.3/spring-messaging-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/luben/zstd-jni/1.5.5-1/zstd-jni-1.5.5-1.jar:/Users/satishkumarsubudhi/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/xerial/snappy/snappy-java/1.1.10.5/snappy-java-1.1.10.5.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/kafka/spring-kafka-test/3.1.1/spring-kafka-test-3.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/zookeeper/zookeeper/3.8.3/zookeeper-3.8.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/zookeeper/zookeeper-jute/3.8.3/zookeeper-jute-3.8.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/yetus/audience-annotations/0.12.0/audience-annotations-0.12.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-handler/4.1.105.Final/netty-handler-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-common/4.1.105.Final/netty-common-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-resolver/4.1.105.Final/netty-resolver-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-buffer/4.1.105.Final/netty-buffer-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport/4.1.105.Final/netty-transport-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.105.Final/netty-transport-native-unix-common-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-codec/4.1.105.Final/netty-codec-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport-native-epoll/4.1.105.Final/netty-transport-native-epoll-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.105.Final/netty-transport-classes-epoll-4.1.105.Final.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-clients/3.6.1/kafka-clients-3.6.1-test.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-metadata/3.6.1/kafka-metadata-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-raft/3.6.1/kafka-raft-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/pcollections/pcollections/4.0.1/pcollections-4.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-server-common/3.6.1/kafka-server-common-3.6.1-test.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-streams-test-utils/3.6.1/kafka-streams-test-utils-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-streams/3.6.1/kafka-streams-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/rocksdb/rocksdbjni/7.9.2/rocksdbjni-7.9.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/scala-library/2.13.11/scala-library-2.13.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-group-coordinator/3.6.1/kafka-group-coordinator-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-storage-api/3.6.1/kafka-storage-api-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-tools-api/3.6.1/kafka-tools-api-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka-storage/3.6.1/kafka-storage-3.6.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/ben-manes/caffeine/caffeine/3.1.8/caffeine-3.1.8.jar:/Users/satishkumarsubudhi/.m2/repository/org/checkerframework/checker-qual/3.37.0/checker-qual-3.37.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/errorprone/error_prone_annotations/2.21.1/error_prone_annotations-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/net/sourceforge/argparse4j/argparse4j/0.7.0/argparse4j-0.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-validator/commons-validator/1.7/commons-validator-1.7.jar:/Users/satishkumarsubudhi/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/Users/satishkumarsubudhi/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/Users/satishkumarsubudhi/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.13/2.15.3/jackson-module-scala_2.13-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.15.3/jackson-dataformat-csv-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/bitbucket/b_c/jose4j/0.9.3/jose4j-0.9.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/modules/scala-collection-compat_2.13/2.10.0/scala-collection-compat_2.13-2.10.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/modules/scala-java8-compat_2.13/1.0.2/scala-java8-compat_2.13-1.0.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/scala-lang/scala-reflect/2.13.11/scala-reflect-2.13.11.jar:/Users/satishkumarsubudhi/.m2/repository/com/typesafe/scala-logging/scala-logging_2.13/3.9.4/scala-logging_2.13-3.9.4.jar:/Users/satishkumarsubudhi/.m2/repository/io/dropwizard/metrics/metrics-core/4.2.23/metrics-core-4.2.23.jar:/Users/satishkumarsubudhi/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/kafka/kafka_2.13/3.6.1/kafka_2.13-3.6.1-test.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.1/junit-platform-launcher-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.2/spring-boot-starter-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.2/spring-boot-actuator-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.2/spring-boot-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.2/micrometer-jakarta9-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-core/1.12.2/micrometer-core-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/satishkumarsubudhi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing-bridge-brave/1.2.2/micrometer-tracing-bridge-brave-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing/1.2.2/micrometer-tracing-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/context-propagation/1.1.0/context-propagation-1.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave/5.16.0/brave-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.16.0/brave-context-slf4j-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.16.0/brave-instrumentation-http-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/aws/brave-propagation-aws/0.23.5/brave-propagation-aws-0.23.5.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.16.3/zipkin-reporter-brave-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.16.3/zipkin-reporter-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/zipkin2/zipkin/2.23.2/zipkin-2.23.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.1.0/spring-cloud-starter-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.1.0/spring-cloud-starter-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.1.0/spring-cloud-context-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.1.0/spring-cloud-commons-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-rsa/1.1.1/spring-security-rsa-1.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.74/bcprov-jdk18on-1.74.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.1.0/spring-cloud-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.2.3/httpclient5-5.2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.2.4/httpcore5-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.2.4/httpcore5-h2-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-client/2.0.1/eureka-client-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/satishkumarsubudhi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.19/xstream-1.4.19.jar:/Users/satishkumarsubudhi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/satishkumarsubudhi/.m2/repository/commons-codec/commons-codec/1.16.0/commons-codec-1.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/satishkumarsubudhi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/jettison/jettison/1.4.0/jettison-1.4.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-core/2.0.1/eureka-core-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/woodstox/woodstox-core/6.2.1/woodstox-core-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.1.0/spring-cloud-starter-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.1.0/spring-cloud-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/reactor-core/3.6.2/reactor-core-3.6.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.1/reactor-extra-3.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.2/spring-boot-starter-cache-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context-support/6.1.3/spring-context-support-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/satishkumarsubudhi"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="/Applications/SpringToolSuite4.app/Contents/Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.6.v20230204-1729/jre"/>
    <property name="file.separator" value="/"/>
    <property name="style.color" value="always"/>
    <property name="basedir" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services/target/surefire/surefirebooter-20240218234615971_23.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.6+10"/>
    <property name="LOG_CORRELATION_PATTERN" value="%correlationId"/>
    <property name="user.name" value="satishkumarsubudhi"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.3.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.6+10"/>
    <property name="localRepository" value="/Users/satishkumarsubudhi/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/xc/dpkm8x8n6bs7f6n0cv_4vmgc0000gn/T/"/>
    <property name="java.version" value="17.0.6"/>
    <property name="user.dir" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="31347"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/satishkumarsubudhi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.6+10"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[notification-service] "/>
  </properties>
  <testcase name="contextLoads" classname="com.satish.notificationservice.NotificationServiceApplicationTests" time="0.468">
    <system-out><![CDATA[23:46:16.340 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.satish.notificationservice.NotificationServiceApplicationTests]: NotificationServiceApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:46:16.383 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.satish.notificationservice.NotificationServiceApplication for test class com.satish.notificationservice.NotificationServiceApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-02-18T23:46:16.567+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] .s.n.NotificationServiceApplicationTests : Starting NotificationServiceApplicationTests using Java 17.0.6 with PID 31347 (started by satishkumarsubudhi in /Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/notification-services)
2024-02-18T23:46:16.568+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] .s.n.NotificationServiceApplicationTests : No active profile set, falling back to 1 default profile: "default"
2024-02-18T23:46:17.050+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.s.cloud.context.scope.GenericScope     : BeanFactory id=662b2a42-65d4-3a9f-9665-27ed30b62e24
2024-02-18T23:46:17.092+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-02-18T23:46:17.093+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.094+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.096+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.098+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.099+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$843/0x00000008004ad958] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.099+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.103+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.106+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.107+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.107+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.107+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.109+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.112+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.112+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.113+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.113+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.114+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.115+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.116+05:30  WARN 31347 --- [notification-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:46:17.700+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-02-18T23:46:17.731+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-02-18T23:46:17.780+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-02-18T23:46:17.816+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-02-18T23:46:17.819+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-02-18T23:46:17.829+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-02-18T23:46:17.829+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-02-18T23:46:17.829+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-02-18T23:46:17.829+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-02-18T23:46:17.829+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-02-18T23:46:17.829+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-02-18T23:46:17.829+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-02-18T23:46:18.027+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-02-18T23:46:18.028+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-02-18T23:46:18.029+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-02-18T23:46:18.031+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1708280178031 with initial instances count: 1
2024-02-18T23:46:18.032+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application NOTIFICATION-SERVICE with eureka with status UP
2024-02-18T23:46:18.033+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1708280178033, current=UP, previous=STARTING]
2024-02-18T23:46:18.033+05:30  INFO 31347 --- [notification-service] [nfoReplicator-0] [                                                 ] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NOTIFICATION-SERVICE/192.168.1.65:notification-service:8085: registering service...
2024-02-18T23:46:18.051+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-notificatioGroup-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = notificatioGroup
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2024-02-18T23:46:18.090+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.1
2024-02-18T23:46:18.090+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 5e3c2b738d253ff5
2024-02-18T23:46:18.090+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1708280178089
2024-02-18T23:46:18.097+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] fkaConsumerFactory$ExtendedKafkaConsumer : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Subscribed to topic(s): notification
2024-02-18T23:46:18.113+05:30  INFO 31347 --- [notification-service] [           main] [                                                 ] .s.n.NotificationServiceApplicationTests : Started NotificationServiceApplicationTests in 1.67 seconds (process running for 2.123)
2024-02-18T23:46:18.145+05:30  INFO 31347 --- [notification-service] [nfoReplicator-0] [                                                 ] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_NOTIFICATION-SERVICE/192.168.1.65:notification-service:8085 - registration status: 204
2024-02-18T23:46:18.256+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Cluster ID: cAH3DZG0TsmUOGAUJZJsnQ
2024-02-18T23:46:18.266+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-02-18T23:46:18.269+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] (Re-)joining group
2024-02-18T23:46:18.302+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Request joining group due to: need to re-join with the given member-id: consumer-notificatioGroup-1-76f6f615-973a-425e-8045-5985cdcaf0cb
2024-02-18T23:46:18.302+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-02-18T23:46:18.302+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] (Re-)joining group
2024-02-18T23:46:18.309+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Successfully joined group with generation Generation{generationId=3, memberId='consumer-notificatioGroup-1-76f6f615-973a-425e-8045-5985cdcaf0cb', protocol='range'}
2024-02-18T23:46:18.312+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Finished assignment for group at generation 3: {consumer-notificatioGroup-1-76f6f615-973a-425e-8045-5985cdcaf0cb=Assignment(partitions=[notification-0, notification-1, notification-2])}
2024-02-18T23:46:18.336+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Successfully synced group in generation Generation{generationId=3, memberId='consumer-notificatioGroup-1-76f6f615-973a-425e-8045-5985cdcaf0cb', protocol='range'}
2024-02-18T23:46:18.336+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Notifying assignor about the new Assignment(partitions=[notification-0, notification-1, notification-2])
2024-02-18T23:46:18.337+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Adding newly assigned partitions: notification-0, notification-1, notification-2
2024-02-18T23:46:18.349+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Setting offset for partition notification-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-18T23:46:18.350+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Setting offset for partition notification-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-18T23:46:18.350+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-notificatioGroup-1, groupId=notificatioGroup] Setting offset for partition notification-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-02-18T23:46:18.350+05:30  INFO 31347 --- [notification-service] [ntainer#0-0-C-1] [                                                 ] o.s.k.l.KafkaMessageListenerContainer    : notificatioGroup: partitions assigned: [notification-0, notification-1, notification-2]
]]></system-out>
  </testcase>
</testsuite>
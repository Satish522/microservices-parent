<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.satish.productservice.ProductserviceApplicationTests" time="5.875" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service/target/test-classes:/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service/target/classes:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb/3.2.2/spring-boot-starter-data-mongodb-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/mongodb-driver-sync/4.11.1/mongodb-driver-sync-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/bson/4.11.1/bson-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/mongodb-driver-core/4.11.1/mongodb-driver-core-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/bson-record-codec/4.11.1/bson-record-codec-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/data/spring-data-mongodb/4.2.2/spring-data-mongodb-4.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/data/spring-data-commons/3.2.2/spring-data-commons-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.1.0/spring-cloud-starter-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.1.0/spring-cloud-starter-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.1.0/spring-cloud-context-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.1.0/spring-cloud-commons-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-rsa/1.1.1/spring-security-rsa-1.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.74/bcprov-jdk18on-1.74.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.1.0/spring-cloud-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.2.3/httpclient5-5.2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.2.4/httpcore5-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.2.4/httpcore5-h2-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-client/2.0.1/eureka-client-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/satishkumarsubudhi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.19/xstream-1.4.19.jar:/Users/satishkumarsubudhi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/satishkumarsubudhi/.m2/repository/commons-codec/commons-codec/1.16.0/commons-codec-1.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/satishkumarsubudhi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/jettison/jettison/1.4.0/jettison-1.4.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-core/2.0.1/eureka-core-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/woodstox/woodstox-core/6.2.1/woodstox-core-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.1.0/spring-cloud-starter-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.1.0/spring-cloud-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/reactor-core/3.6.2/reactor-core-3.6.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.1/reactor-extra-3.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.2/spring-boot-starter-cache-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context-support/6.1.3/spring-context-support-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.2.2/spring-boot-devtools-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/testcontainers/mongodb/1.19.4/mongodb-1.19.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/testcontainers/testcontainers/1.19.4/testcontainers-1.19.4.jar:/Users/satishkumarsubudhi/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/commons/commons-compress/1.25.0/commons-compress-1.25.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/Users/satishkumarsubudhi/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/docker-java/docker-java-api/3.3.4/docker-java-api-3.3.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.4/docker-java-transport-zerodep-3.3.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/docker-java/docker-java-transport/3.3.4/docker-java-transport-3.3.4.jar:/Users/satishkumarsubudhi/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/testcontainers/junit-jupiter/1.19.4/junit-jupiter-1.19.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.2/spring-boot-starter-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.2/spring-boot-actuator-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.2/spring-boot-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.2/micrometer-jakarta9-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-core/1.12.2/micrometer-core-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/satishkumarsubudhi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing-bridge-brave/1.2.2/micrometer-tracing-bridge-brave-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing/1.2.2/micrometer-tracing-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/context-propagation/1.1.0/context-propagation-1.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave/5.16.0/brave-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.16.0/brave-context-slf4j-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.16.0/brave-instrumentation-http-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/aws/brave-propagation-aws/0.23.5/brave-propagation-aws-0.23.5.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.16.3/zipkin-reporter-brave-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.16.3/zipkin-reporter-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/zipkin2/zipkin/2.23.2/zipkin-2.23.2.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="/Applications/SpringToolSuite4.app/Contents/Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.6.v20230204-1729/jre/lib"/>
    <property name="sun.java.command" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service/target/surefire/surefirebooter-20240218234533336_3.jar /Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service/target/surefire 2024-02-18T23-45-33_298-jvmRun1 surefire-20240218234533336_1tmp surefire_0-20240218234533336_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service/target/test-classes:/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service/target/classes:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb/3.2.2/spring-boot-starter-data-mongodb-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.2/spring-boot-starter-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.2/spring-boot-starter-logging-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/jul-to-slf4j/2.0.11/jul-to-slf4j-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/mongodb-driver-sync/4.11.1/mongodb-driver-sync-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/bson/4.11.1/bson-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/mongodb-driver-core/4.11.1/mongodb-driver-core-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mongodb/bson-record-codec/4.11.1/bson-record-codec-4.11.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/data/spring-data-mongodb/4.2.2/spring-data-mongodb-4.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-tx/6.1.3/spring-tx-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context/6.1.3/spring-context-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-beans/6.1.3/spring-beans-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-expression/6.1.3/spring-expression-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/data/spring-data-commons/3.2.2/spring-data-commons-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.2/spring-boot-starter-web-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.2/spring-boot-starter-json-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.3/jackson-datatype-jsr310-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.3/jackson-module-parameter-names-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.2/spring-boot-starter-tomcat-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.18/tomcat-embed-el-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.18/tomcat-embed-websocket-10.1.18.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-web/6.1.3/spring-web-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-webmvc/6.1.3/spring-webmvc-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-aop/6.1.3/spring-aop-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-netflix-eureka-client/4.1.0/spring-cloud-starter-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter/4.1.0/spring-cloud-starter-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-context/4.1.0/spring-cloud-context-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-crypto/6.2.1/spring-security-crypto-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-commons/4.1.0/spring-cloud-commons-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/security/spring-security-rsa/1.1.1/spring-security-rsa-1.1.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/bouncycastle/bcprov-jdk18on/1.74/bcprov-jdk18on-1.74.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-netflix-eureka-client/4.1.0/spring-cloud-netflix-eureka-client-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.2.3/httpclient5-5.2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.2.4/httpcore5-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/core5/httpcore5-h2/5.2.4/httpcore5-h2-5.2.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-client/2.0.1/eureka-client-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar:/Users/satishkumarsubudhi/.m2/repository/joda-time/joda-time/2.3/joda-time-2.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/thoughtworks/xstream/xstream/1.4.19/xstream-1.4.19.jar:/Users/satishkumarsubudhi/.m2/repository/io/github/x-stream/mxparser/1.2.2/mxparser-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/3.1.0/jakarta.ws.rs-api-3.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar:/Users/satishkumarsubudhi/.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/satishkumarsubudhi/.m2/repository/commons-codec/commons-codec/1.16.0/commons-codec-1.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/Users/satishkumarsubudhi/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/jettison/jettison/1.4.0/jettison-1.4.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/netflix/eureka/eureka-core/2.0.1/eureka-core-2.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/fasterxml/woodstox/woodstox-core/6.2.1/woodstox-core-6.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-starter-loadbalancer/4.1.0/spring-cloud-starter-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/cloud/spring-cloud-loadbalancer/4.1.0/spring-cloud-loadbalancer-4.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/reactor-core/3.6.2/reactor-core-3.6.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/satishkumarsubudhi/.m2/repository/io/projectreactor/addons/reactor-extra/3.5.1/reactor-extra-3.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-cache/3.2.2/spring-boot-starter-cache-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-context-support/6.1.3/spring-context-support-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/com/stoyanr/evictor/1.0.0/evictor-1.0.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-devtools/3.2.2/spring-boot-devtools-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot/3.2.2/spring-boot-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.2/spring-boot-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.2/spring-boot-starter-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test/3.2.2/spring-boot-test-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.2/spring-boot-test-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/satishkumarsubudhi/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy/1.14.11/byte-buddy-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.1/junit-jupiter-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-commons/1.10.1/junit-platform-commons-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.1/junit-jupiter-params-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.1/junit-jupiter-engine-5.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/junit/platform/junit-platform-engine/1.10.1/junit-platform-engine-1.10.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.11/byte-buddy-agent-1.14.11.jar:/Users/satishkumarsubudhi/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/satishkumarsubudhi/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-core/6.1.3/spring-core-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-jcl/6.1.3/spring-jcl-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/spring-test/6.1.3/spring-test-6.1.3.jar:/Users/satishkumarsubudhi/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/satishkumarsubudhi/.m2/repository/org/testcontainers/mongodb/1.19.4/mongodb-1.19.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/testcontainers/testcontainers/1.19.4/testcontainers-1.19.4.jar:/Users/satishkumarsubudhi/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/apache/commons/commons-compress/1.25.0/commons-compress-1.25.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/Users/satishkumarsubudhi/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/docker-java/docker-java-api/3.3.4/docker-java-api-3.3.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.4/docker-java-transport-zerodep-3.3.4.jar:/Users/satishkumarsubudhi/.m2/repository/com/github/docker-java/docker-java-transport/3.3.4/docker-java-transport-3.3.4.jar:/Users/satishkumarsubudhi/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/testcontainers/junit-jupiter/1.19.4/junit-jupiter-1.19.4.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.2/spring-boot-starter-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.2/spring-boot-actuator-autoconfigure-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.2/spring-boot-actuator-3.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-observation/1.12.2/micrometer-observation-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-commons/1.12.2/micrometer-commons-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.2/micrometer-jakarta9-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-core/1.12.2/micrometer-core-1.12.2.jar:/Users/satishkumarsubudhi/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/satishkumarsubudhi/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing-bridge-brave/1.2.2/micrometer-tracing-bridge-brave-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/micrometer-tracing/1.2.2/micrometer-tracing-1.2.2.jar:/Users/satishkumarsubudhi/.m2/repository/io/micrometer/context-propagation/1.1.0/context-propagation-1.1.0.jar:/Users/satishkumarsubudhi/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/satishkumarsubudhi/.m2/repository/org/slf4j/slf4j-api/2.0.11/slf4j-api-2.0.11.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave/5.16.0/brave-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.16.0/brave-context-slf4j-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.16.0/brave-instrumentation-http-5.16.0.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/aws/brave-propagation-aws/0.23.5/brave-propagation-aws-0.23.5.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.16.3/zipkin-reporter-brave-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.16.3/zipkin-reporter-2.16.3.jar:/Users/satishkumarsubudhi/.m2/repository/io/zipkin/zipkin2/zipkin/2.23.2/zipkin-2.23.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/satishkumarsubudhi"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="/Applications/SpringToolSuite4.app/Contents/Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.aarch64_17.0.6.v20230204-1729/jre"/>
    <property name="file.separator" value="/"/>
    <property name="style.color" value="always"/>
    <property name="basedir" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service/target/surefire/surefirebooter-20240218234533336_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.6+10"/>
    <property name="LOG_CORRELATION_PATTERN" value="%correlationId"/>
    <property name="user.name" value="satishkumarsubudhi"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.3.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.6+10"/>
    <property name="localRepository" value="/Users/satishkumarsubudhi/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/xc/dpkm8x8n6bs7f6n0cv_4vmgc0000gn/T/"/>
    <property name="java.version" value="17.0.6"/>
    <property name="user.dir" value="/Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="31287"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/satishkumarsubudhi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.6+10"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[product-service] "/>
  </properties>
  <testcase name="shouldCreateProduct" classname="com.satish.productservice.ProductserviceApplicationTests" time="0.563">
    <system-out><![CDATA[23:45:33.764 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.satish.productservice.ProductserviceApplicationTests]: ProductserviceApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:45:33.808 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.satish.productservice.ProductserviceApplication for test class com.satish.productservice.ProductserviceApplicationTests
23:45:33.877 [main] INFO org.testcontainers.images.PullPolicy -- Image pull policy will be performed by: DefaultPullPolicy()
23:45:33.878 [main] INFO org.testcontainers.utility.ImageNameSubstitutor -- Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
23:45:34.192 [main] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy -- Found Docker environment with Docker accessed via Unix socket (/Users/satishkumarsubudhi/.docker/run/docker.sock)
23:45:34.193 [main] INFO org.testcontainers.DockerClientFactory -- Docker host IP address is localhost
23:45:34.204 [main] INFO org.testcontainers.DockerClientFactory -- Connected to docker: 
  Server Version: 24.0.6
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 3926 MB
23:45:34.229 [main] INFO tc.testcontainers/ryuk:0.6.0 -- Creating container for image: testcontainers/ryuk:0.6.0
23:45:34.238 [main] INFO org.testcontainers.utility.RegistryAuthLocator -- Failure when attempting to lookup auth config. Please ignore if you don't have images in an authenticated registry. Details: (dockerImageName: testcontainers/ryuk:0.6.0, configFile: /Users/satishkumarsubudhi/.docker/config.json, configEnv: DOCKER_AUTH_CONFIG). Falling back to docker-java default behaviour. Exception message: Could not execute [docker-credential-desktop, get]. Error=2, No such file or directory
23:45:34.307 [main] INFO tc.testcontainers/ryuk:0.6.0 -- Container testcontainers/ryuk:0.6.0 is starting: 031e0a04b7a4934b95c9a1079bcca49a0cb37e5e80627fa50e866cf165c99029
23:45:34.574 [main] INFO tc.testcontainers/ryuk:0.6.0 -- Container testcontainers/ryuk:0.6.0 started in PT0.344813S
23:45:34.578 [main] INFO org.testcontainers.utility.RyukResourceReaper -- Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
23:45:34.579 [main] INFO org.testcontainers.DockerClientFactory -- Checking the system...
23:45:34.579 [main] INFO org.testcontainers.DockerClientFactory -- ✔︎ Docker server version should be at least 1.6.0
23:45:34.579 [main] INFO tc.mongo:4.0.10 -- Creating container for image: mongo:4.0.10
23:45:34.597 [main] INFO tc.mongo:4.0.10 -- Container mongo:4.0.10 is starting: c93bc5e6033f40bbb30b615d6771a51f1a6570634cec0c3191af3bc90253e1cf
23:45:34.874 [main] INFO tc.mongo:4.0.10 -- Container mongo:4.0.10 started in PT0.295016S
23:45:37.081 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-02-18T23:45:37.226+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] c.s.p.ProductserviceApplicationTests     : Starting ProductserviceApplicationTests using Java 17.0.6 with PID 31287 (started by satishkumarsubudhi in /Users/satishkumarsubudhi/MicroserviceProject/microservice-parent/product-service)
2024-02-18T23:45:37.230+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] c.s.p.ProductserviceApplicationTests     : No active profile set, falling back to 1 default profile: "default"
2024-02-18T23:45:37.635+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-02-18T23:45:37.695+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 58 ms. Found 1 MongoDB repository interface.
2024-02-18T23:45:37.782+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] o.s.cloud.context.scope.GenericScope     : BeanFactory id=7231fd4b-b22f-34b8-8300-a380b781f3cf
2024-02-18T23:45:37.830+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-02-18T23:45:37.832+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.833+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.837+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.839+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.839+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$1076/0x00000008006567f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.839+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.844+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.848+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.848+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.849+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.849+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.850+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.856+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.857+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.857+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.858+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.858+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-02-18T23:45:37.961+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "aarch64", "version": "14.3.1"}, "platform": "Java/Eclipse Adoptium/17.0.6+10"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@52efb338], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@64508788, com.mongodb.Jep395RecordCodecProvider@30b1c5d5, com.mongodb.KotlinCodecProvider@3e2d65e1]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:61121], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@1174676f], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-02-18T23:45:37.972+05:30  INFO 31287 --- [product-service] [localhost:61121] [                                                 ] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:61121, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9105291, setName='docker-rs', canonicalAddress=c93bc5e6033f:27017, hosts=[c93bc5e6033f:27017], passives=[], arbiters=[], primary='c93bc5e6033f:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000001, setVersion=1, topologyVersion=null, lastWriteDate=Sun Feb 18 23:45:37 IST 2024, lastUpdateTimeNanos=32118014958375}
2024-02-18T23:45:38.508+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-18T23:45:38.508+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-18T23:45:38.510+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2024-02-18T23:45:38.514+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 5 ms
2024-02-18T23:45:38.522+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-02-18T23:45:38.530+05:30  WARN 31287 --- [product-service] [           main] [                                                 ] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-02-18T23:45:38.555+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-02-18T23:45:38.589+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-02-18T23:45:38.591+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-02-18T23:45:38.600+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-02-18T23:45:38.600+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-02-18T23:45:38.600+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-02-18T23:45:38.600+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-02-18T23:45:38.600+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-02-18T23:45:38.600+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-02-18T23:45:38.600+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-02-18T23:45:38.808+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-02-18T23:45:38.809+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-02-18T23:45:38.810+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-02-18T23:45:38.812+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1708280138812 with initial instances count: 0
2024-02-18T23:45:38.814+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application PRODUCT-SERVICE with eureka with status UP
2024-02-18T23:45:38.814+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1708280138814, current=UP, previous=STARTING]
2024-02-18T23:45:38.816+05:30  INFO 31287 --- [product-service] [nfoReplicator-0] [                                                 ] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRODUCT-SERVICE/192.168.1.65:product-service:8081: registering service...
2024-02-18T23:45:38.836+05:30  INFO 31287 --- [product-service] [           main] [                                                 ] c.s.p.ProductserviceApplicationTests     : Started ProductserviceApplicationTests in 1.764 seconds (process running for 5.457)
2024-02-18T23:45:38.929+05:30  INFO 31287 --- [product-service] [nfoReplicator-0] [                                                 ] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_PRODUCT-SERVICE/192.168.1.65:product-service:8081 - registration status: 204
2024-02-18T23:45:39.366+05:30  INFO 31287 --- [product-service] [           main] [65d2494bd871009e4b6b3d3b1c266120-4b6b3d3b1c266120] c.s.p.service.ProductService             : Product 65d2494be159c53c777e6820 is saved...
]]></system-out>
  </testcase>
</testsuite>